@startuml
'https://plantuml.com/sequence-diagram
!pragma teoz true
hide footbox

title More Concurrent Cases

participant Gateway as gw
box App
participant "(thread 1)" as app
participant "(thread 2)" as app2
end box

group concurrent write & poll [happy]
activate app
app -> gw ++: POST \~/state { ... }
return 201 Created ETag: "1" Location: \~/state?lock {Update 1}
activate app2
app2 -> gw ++: POST \~/poll
note over gw
poll is delayed
by pending Update
end note
& app -> app: process\nUpdate 1
app -> gw ++: DELETE \~/state?lock If-Match: "1"
return 200 OK
deactivate app
gw --> app2 --: 201 Created ETag: "1" Location: \~/state?lock []
app2 -> gw ++: DELETE \~/state?lock If-Match: "1"
return 200 OK
deactivate app2
end group

group timeout write processing [unhappy]
activate app
app -> gw ++: POST \~/state { ... }
return 201 Created ETag: "1" Location: \~/state?lock {Update 1}
app -> app: process\nUpdate 1
...lock timeout but not actually dead...
gw -> app2 ++: POST /webhook?ETag="1" {Update 1, dequeueCount=2}
note left
dequeueCount
warns Update 1
is pending
end note
note right: ignore warning
app2 -> app2: process\nUpdate 1
note left #pink
duplicate processing!
(OK if idempotent)
end note
app2 -> gw ++: DELETE \~/state?lock If-Match: "1"
return 200 OK
deactivate app2
...
app -> gw ++: DELETE \~/state?lock If-Match: "1"
return 404 Not Found
note right: lock is not found (ETag OK)
deactivate app
end group

@enduml