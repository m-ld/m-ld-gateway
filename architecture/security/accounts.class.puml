@startuml
'https://plantuml.com/class-diagram

hide circle
allowmixing

class Gateway <<domain>> <<service>> {
  rootAccount : Account
  rootKey : AuthKey
}

Gateway *-- "*" Account

class Account <<abstract>> <<subject>> {
  email : string [1..*]
  key : UserKey [*]
  subdomain : Subdomain [*]
  naming : any | uuid [*] = any
  remotesAuth : anon | key | jwt [*] = key
}
note right of Account::email
  Registered email, used
  for account activation
end note
note right of Account::naming
 ""any"" naming requires an app
 to PUT (sub)domain names.
 ""uuid"" naming allows any UUID
 (sub)domain name, or
 generate with POST.
end note
note right of Account::remotesAuth
  Allowed remote
  authentication methods
  for subdomain clones.
  ""anon"" auth only works
  with ""uuid"" subdomains
end note

Account *-- "*" Subdomain

actor "User (account owner)" as User

User ..> Account: has
User ..> "*" AuthKey: has

class Subdomain <<domain>> <<subject>> {
  //account : Account//
  useSignatures : boolean
}
note top of Subdomain
  a subject in the
  Gateway domain;
  also a domain shared
  to authorised clients
end note
note right of Subdomain::account
  entailed from
  Account.subdomain
end note
note right of Subdomain::useSignatures
  If true, transport security
  is activated and all clones
  must initialise with it
end note

class UserKey <<subject>> {
  @id = """.${keyid}" ""
  name? : string
  publicKey : base64Binary
  privateKey : base64Binary
  revoked? : boolean
}
note right of UserKey::name
  account@≪gateway≫
  Not present in config
end note
note right of UserKey::privateKey
  Encrypted with AuthKey
end note
note right of UserKey::revoked
  possibly redundant
  with external keystore
  Assumed ""true"" in config
end note

Account "1" *-- "*" UserKey

class AuthKey <<secret>> {
  keyid : string
  appid : string
  secret : string
}
note right of AuthKey
  String-serialised "API key"
  Usable with Basic HTTP auth.
  ""secret"" content is not
  known to the Gateway.
end note

@enduml